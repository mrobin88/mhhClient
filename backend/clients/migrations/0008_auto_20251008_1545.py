# Generated by Django 3.2.25 on 2025-10-08 15:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0007_auto_20250917_2310'),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Site name (e.g., "Mission & 16th Pit Stop")', max_length=200)),
                ('site_type', models.CharField(choices=[('pitstop', 'Pit Stop Location'), ('special_event', 'Special Event'), ('other', 'Other Site')], default='pitstop', max_length=20)),
                ('address', models.CharField(max_length=300)),
                ('neighborhood', models.CharField(blank=True, max_length=100)),
                ('supervisor_name', models.CharField(blank=True, max_length=100)),
                ('supervisor_phone', models.CharField(blank=True, max_length=20)),
                ('supervisor_email', models.EmailField(blank=True, max_length=254)),
                ('typical_start_time', models.TimeField(help_text='Typical shift start time')),
                ('typical_end_time', models.TimeField(help_text='Typical shift end time')),
                ('available_time_slots', models.JSONField(default=list, help_text='Available time slots: ["6-12", "13-21", "22-5"]')),
                ('max_workers_per_shift', models.IntegerField(default=2, help_text='Maximum workers per shift')),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Work Site',
                'verbose_name_plural': 'Work Sites',
                'ordering': ['name'],
            },
        ),
        migrations.AlterField(
            model_name='client',
            name='resume',
            field=models.FileField(blank=True, help_text='Upload client resume', null=True, upload_to='client-docs/resumes/'),
        ),
        migrations.CreateModel(
            name='WorkAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_date', models.DateField(help_text='Date of work assignment')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('no_show', 'No Show'), ('called_out', 'Called Out'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('confirmed_by_client', models.BooleanField(default=False)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.CharField(help_text='Staff member who made the assignment', max_length=100)),
                ('assignment_notes', models.TextField(blank=True)),
                ('called_out_at', models.DateTimeField(blank=True, null=True)),
                ('callout_reason', models.TextField(blank=True)),
                ('replacement_found', models.BooleanField(default=False)),
                ('hours_worked', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('performance_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_assignments', to='clients.client')),
                ('replacement_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replacement_assignments', to='clients.client')),
                ('work_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='clients.worksite')),
            ],
            options={
                'verbose_name': 'Work Assignment',
                'verbose_name_plural': 'Work Assignments',
                'ordering': ['-assignment_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='CallOutLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('reported_by', models.CharField(help_text='Who received the call-out', max_length=100)),
                ('reason', models.TextField(help_text='Reason for call-out')),
                ('advance_notice_hours', models.IntegerField(help_text='How many hours notice was given')),
                ('replacement_contacted_count', models.IntegerField(default=0, help_text='Number of replacements contacted')),
                ('replacement_found_at', models.DateTimeField(blank=True, null=True)),
                ('client_contacted_after', models.BooleanField(default=False)),
                ('follow_up_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='callout_log', to='clients.workassignment')),
            ],
            options={
                'verbose_name': 'Call-Out Log',
                'verbose_name_plural': 'Call-Out Logs',
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('available', models.BooleanField(default=True)),
                ('preferred_time_slots', models.JSONField(default=list, help_text='List of preferred time slots: ["6-12", "13-21", "22-5"]')),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='e.g., "Can only work mornings", "Available after 2pm"')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='clients.client')),
            ],
            options={
                'verbose_name': 'Client Availability',
                'verbose_name_plural': 'Client Availabilities',
                'ordering': ['client', 'day_of_week'],
                'unique_together': {('client', 'day_of_week')},
            },
        ),
    ]
